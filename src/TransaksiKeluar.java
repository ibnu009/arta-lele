
import connection.DatabaseConnection;
import java.awt.Window;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import utils.FormatHelper;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author nizam
 */
public class TransaksiKeluar extends javax.swing.JFrame {

    FormatHelper formater = new FormatHelper();
    private int noTranskeluar = 0, idUser = 0;
    private Date rDate;

    private String status;

    public TransaksiKeluar() {
        initComponents();
        getData();
    }

    public TransaksiKeluar(int idUser) {
        this.idUser = idUser;
        initComponents();
        initiateEditView();
        getData();
    }

    public TransaksiKeluar(int noTransKeluar, int idUser) {
        this.noTranskeluar = noTransKeluar;
        this.idUser = idUser;
        initComponents();
        initiateEditView();
        getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txTrans = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        edtDeskripsi = new javax.swing.JTextField();
        cmbKategori = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        edtTotal = new javax.swing.JTextField();
        btnConfirm = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnDatePicker = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(null);

        txTrans.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        txTrans.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txTrans.setText("TRANSAKSI KELUAR");
        jPanel1.add(txTrans);
        txTrans.setBounds(0, 0, 540, 40);

        jLabel3.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jLabel3.setText("Total Transaksi Keluar");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(30, 70, 130, 20);

        jLabel4.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jLabel4.setText("Tgl.Transaksi Keluar");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(30, 120, 130, 20);

        jLabel5.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jLabel5.setText("Detail Transaksi Keluar");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(30, 160, 140, 30);
        jPanel1.add(edtDeskripsi);
        edtDeskripsi.setBounds(190, 160, 160, 30);

        cmbKategori.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bensin", "Membeli bibit baru", "Membeli Pakan", "Perlengkapan" }));
        cmbKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbKategoriActionPerformed(evt);
            }
        });
        jPanel1.add(cmbKategori);
        cmbKategori.setBounds(190, 210, 160, 30);

        jLabel6.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jLabel6.setText("Jenis Transaksi");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(30, 210, 90, 20);

        edtTotal.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jPanel1.add(edtTotal);
        edtTotal.setBounds(190, 60, 160, 30);

        btnConfirm.setText("Simpan");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });
        jPanel1.add(btnConfirm);
        btnConfirm.setBounds(250, 300, 80, 30);

        btnCancel.setText("Batal");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancel);
        btnCancel.setBounds(347, 300, 70, 30);
        jPanel1.add(btnDatePicker);
        btnDatePicker.setBounds(190, 110, 160, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbKategoriActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed

        if (edtTotal.getText().isBlank() || edtTotal.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Total masih kosong, Jangan lupa untuk mengisi total terlebih dahulu!");
        } else if ("suksesSave".equals(performSaveOrUpdate())) {
            int dialog = JOptionPane.showOptionDialog(null, "Berhasil menambahkan transaksi keluar! apakah anda ingin keluar?", "Sukses", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
            if (dialog == JOptionPane.OK_OPTION) {
                JComponent comp = (JComponent) evt.getSource();
                Window win = SwingUtilities.getWindowAncestor(comp);
                win.dispose();
            }
        } else if ("suksesUpdate".equals(performSaveOrUpdate())) {
            int dialog = JOptionPane.showOptionDialog(null, "Berhasil mengubah data! apakah anda ingin keluar?", "Sukses", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
            if (dialog == JOptionPane.OK_OPTION) {
                JComponent comp = (JComponent) evt.getSource();
                Window win = SwingUtilities.getWindowAncestor(comp);
                win.dispose();

                LaporanKeluar lk = new LaporanKeluar(idUser);
                lk.setVisible(true);
                lk.pack();
                lk.setLocationRelativeTo(null);
                lk.setDefaultCloseOperation(ArtaLele_.DISPOSE_ON_CLOSE);
            } else {
                JOptionPane.showMessageDialog(null, "Terjadi kesalahan!");

            }
    }//GEN-LAST:event_btnConfirmActionPerformed
    }
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        int dialog = JOptionPane.showOptionDialog(null, "Apakah anda yakin untuk membatalkan?", "Cancel", JOptionPane.OK_CANCEL_OPTION, JOptionPane.CANCEL_OPTION, null, null, null);
        if (dialog == JOptionPane.OK_OPTION) {
            JComponent comp = (JComponent) evt.getSource();
            Window win = SwingUtilities.getWindowAncestor(comp);
            win.dispose();
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransaksiKeluar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransaksiKeluar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransaksiKeluar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransaksiKeluar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransaksiKeluar().setVisible(true);
            }
        });
    }

    private String performSaveOrUpdate() {
        String kategori = String.valueOf(cmbKategori.getSelectedItem());
        String desc = edtDeskripsi.getText();
        String rawTotal = edtTotal.getText();
        String date;
        int total = Integer.parseInt(rawTotal);

        Date rawDate = btnDatePicker.getDate();
        date = formater.convertDateToProperDate(rawDate);

        if ("".equals(date)) {
            date = formater.getTodayDate();
        }

        if (noTranskeluar > 0) {
            updateLaporanKeluar(total, desc, kategori, noTranskeluar);
        } else {
            saveLaporanKeluar(total, desc, kategori, date);
        }

        return status;
    }

    private void saveLaporanKeluar(int total, String desc, String kategori, String date) {
        try {
            Statement statement = DatabaseConnection.getDatabaseConnection().createStatement();
            String sqlQuery = "INSERT INTO transaksi_keluar (id_user, total, deskripsi, kategori, tanggal_trans_keluar) VALUES ('%d','%d','%s','%s','%s')";
            sqlQuery = String.format(sqlQuery, idUser, total, desc, kategori, date);

            statement.execute(sqlQuery);
            status = "suksesSave";

        } catch (Exception e) {
            status = "gagalSave";
            e.printStackTrace();
        }
    }

    private void updateLaporanKeluar(int total, String desc, String kategori, int noTrans) {
        try {
            Statement statement = DatabaseConnection.getDatabaseConnection().createStatement();
            String sqlQuery = "UPDATE transaksi_keluar SET total=%d, deskripsi='%s', kategori='%s' WHERE no_trans_keluar=%d";
            sqlQuery = String.format(sqlQuery, total, desc, kategori, noTrans);

            statement.execute(sqlQuery);
            status = "suksesUpdate";
        } catch (Exception e) {
            status = "gagalUpdate";
            e.printStackTrace();
        }
    }

    private void initiateEditView() {
        int total;
        String kategori, date;
        try {
            Statement statement = DatabaseConnection.getDatabaseConnection().createStatement();
            String sqlStatement = "SELECT * FROM transaksi_keluar WHERE no_trans_keluar='%d'";
            sqlStatement = String.format(sqlStatement, noTranskeluar);

            ResultSet res = statement.executeQuery(sqlStatement);

            if (res.next()) {
                idUser = res.getInt("id_user");
                total = res.getInt("total");
                kategori = res.getString("kategori");

                String desc = res.getString("deskripsi");
                date = res.getString("tanggal_trans_keluar");

                String formatedTotal = String.valueOf(total);

                edtTotal.setText(formatedTotal);
                edtDeskripsi.setText(desc);

                rDate = formater.convertStringToDate(date);
                btnDatePicker.setDate(rDate);

                cmbKategori.getModel().setSelectedItem(kategori);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void getData() {

        btnDatePicker.setDateFormatString("dd MMMM yyyy");

        try {
            String today = formater.getTodayDate();

            rDate = formater.convertStringToDate(today);
            btnDatePicker.setDate(rDate);
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (noTranskeluar > 0) {
            txTrans.setText("EDIT TRANSAKSI KELUAR");
        } else {
            txTrans.setText("TAMBAH TRANSAKSI KELUAR");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnConfirm;
    private com.toedter.calendar.JDateChooser btnDatePicker;
    private javax.swing.JComboBox cmbKategori;
    private javax.swing.JTextField edtDeskripsi;
    private javax.swing.JTextField edtTotal;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel txTrans;
    // End of variables declaration//GEN-END:variables
}
