
import connection.DatabaseConnection;
import java.awt.Window;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import utils.FormatHelper;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author nizam
 */
public class TransaksiMasuk extends javax.swing.JFrame {

    private int berat = 0, total = 0, harga = 0, idUser = 0;
    private String date = "";
    String statusSave;
    private Date rDate;

    private int noTransaksi = 0;

    FormatHelper formater = new FormatHelper();

    /**
     * Creates new form TransaksiMasuk
     *
     * @param noTrans
     */
    public TransaksiMasuk() {
        initComponents();
        getBaseHarga();
    }

    public TransaksiMasuk(int idUser) {
        this.idUser = idUser;
        initComponents();
        getBaseHarga();
    }

    public TransaksiMasuk(int noTrans, int idUser) {
        this.noTransaksi = noTrans;
        this.idUser = idUser;
        initComponents();
        getBaseHarga();
        initiateEditView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txTrans = new javax.swing.JLabel();
        tot = new javax.swing.JLabel();
        deskripsi = new javax.swing.JLabel();
        bharga = new javax.swing.JLabel();
        tgl = new javax.swing.JLabel();
        btnCalculate = new javax.swing.JButton();
        txBaseHarga = new javax.swing.JLabel();
        txTotal = new javax.swing.JLabel();
        edtDeskripsiTransaksi = new javax.swing.JTextField();
        btnConfirm = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        edtBerat = new javax.swing.JFormattedTextField();
        btnDatePicker = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(null);

        txTrans.setFont(new java.awt.Font("Tw Cen MT", 1, 24)); // NOI18N
        txTrans.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txTrans.setText("TRANSAKSI MASUK");
        jPanel1.add(txTrans);
        txTrans.setBounds(0, 0, 420, 40);

        tot.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        tot.setText("Total");
        jPanel1.add(tot);
        tot.setBounds(20, 170, 34, 14);

        deskripsi.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        deskripsi.setText("Deskripsi");
        jPanel1.add(deskripsi);
        deskripsi.setBounds(20, 250, 100, 16);

        bharga.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        bharga.setText("Base Harga");
        jPanel1.add(bharga);
        bharga.setBounds(20, 140, 80, 16);

        tgl.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        tgl.setText("Tgl. Transaksi");
        jPanel1.add(tgl);
        tgl.setBounds(20, 200, 110, 20);

        btnCalculate.setText("Hitung");
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });
        jPanel1.add(btnCalculate);
        btnCalculate.setBounds(330, 70, 70, 30);

        txBaseHarga.setText("-");
        jPanel1.add(txBaseHarga);
        txBaseHarga.setBounds(160, 130, 240, 30);

        txTotal.setText("-");
        jPanel1.add(txTotal);
        txTotal.setBounds(160, 160, 250, 30);
        jPanel1.add(edtDeskripsiTransaksi);
        edtDeskripsiTransaksi.setBounds(160, 250, 210, 50);

        btnConfirm.setText("Simpan");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });
        jPanel1.add(btnConfirm);
        btnConfirm.setBounds(190, 330, 110, 30);

        btnCancel.setText("Batal");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel1.add(btnCancel);
        btnCancel.setBounds(310, 330, 90, 30);

        jLabel8.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jLabel8.setText("Jumlah satuan (Kg)");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(20, 70, 120, 20);
        jPanel1.add(edtBerat);
        edtBerat.setBounds(160, 70, 150, 30);

        btnDatePicker.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDatePickerMouseClicked(evt);
            }
        });
        jPanel1.add(btnDatePicker);
        btnDatePicker.setBounds(160, 200, 150, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed

        String rawBerat = edtBerat.getText();
        if (rawBerat.isEmpty() || rawBerat.isBlank()) {
            JOptionPane.showMessageDialog(null, "Jangan lupa isi beratnya terlebih dahulu!");
        } else if ("0".equals(rawBerat)) {
            JOptionPane.showMessageDialog(null, "Berat tidak boleh angka 0!");
        } else {
            berat = Integer.parseInt(rawBerat);

            total = berat * harga;
            String formatedTotal = formater.formatNumberToThousand(total);

            txTotal.setText(formatedTotal);

            System.out.println(total);
        }
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed

        if (total == 0) {
            JOptionPane.showMessageDialog(null, "Total masih kosong, Jangan lupa untuk tekan tombol hitung terlebih dahulu!");
        } else if ("suksesSave".equals(saveTransaksiMasuk())) {
            int dialog = JOptionPane.showOptionDialog(null, "Berhasil menambahkan transaksi masuk! apakah anda ingin keluar?", "Sukses", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
            if (dialog == JOptionPane.OK_OPTION) {
                JComponent comp = (JComponent) evt.getSource();
                Window win = SwingUtilities.getWindowAncestor(comp);
                win.dispose();
            }
        } else if ("suksesUpdate".equals(saveTransaksiMasuk())) {
            int dialog = JOptionPane.showOptionDialog(null, "Berhasil mengubah data! apakah anda ingin keluar?", "Sukses", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE, null, null, null);
            if (dialog == JOptionPane.OK_OPTION) {
                JComponent comp = (JComponent) evt.getSource();
                Window win = SwingUtilities.getWindowAncestor(comp);
                win.dispose();

                LaporanMasuk lm = new LaporanMasuk(idUser);
                lm.setVisible(true);
                lm.pack();
                lm.setLocationRelativeTo(null);
                lm.setDefaultCloseOperation(ArtaLele_.DISPOSE_ON_CLOSE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan!");
        }

        edtDeskripsiTransaksi.setText("");
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        int dialog = JOptionPane.showOptionDialog(null, "Apakah anda yakin untuk membatalkan?", "Cancel", JOptionPane.OK_CANCEL_OPTION, JOptionPane.CANCEL_OPTION, null, null, null);
        if (dialog == JOptionPane.OK_OPTION) {
            JComponent comp = (JComponent) evt.getSource();
            Window win = SwingUtilities.getWindowAncestor(comp);
            win.dispose();
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnDatePickerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDatePickerMouseClicked

    }//GEN-LAST:event_btnDatePickerMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransaksiMasuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransaksiMasuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransaksiMasuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransaksiMasuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransaksiMasuk().setVisible(true);
            }
        });
    }

    private String saveTransaksiMasuk() {
        String weight = berat + " Kg";
        String desc = edtDeskripsiTransaksi.getText();

        btnDatePicker.setDateFormatString("dd MMMM yyyy");
        Date rawDate = btnDatePicker.getDate();
        date = formater.convertDateToProperDate(rawDate);

        if ("".equals(date)) {
            date = formater.getTodayDate();
        }

        if (noTransaksi > 0) {
            try {
                Statement statement = DatabaseConnection.getDatabaseConnection().createStatement();
                String sqlQuery = "UPDATE transaksi_masuk SET berat='%s', total=%d, deskripsi='%s' WHERE no_trans_masuk=%d";
                sqlQuery = String.format(sqlQuery, weight, total, desc, noTransaksi);

                statement.execute(sqlQuery);
                statusSave = "suksesUpdate";
            } catch (Exception e) {
                statusSave = "gagalUpdate";
                e.printStackTrace();

            }

        } else {
            try {
                Statement statement = DatabaseConnection.getDatabaseConnection().createStatement();
                String sqlQuery = "INSERT INTO transaksi_masuk (id_user, berat, total, deskripsi, tanggal_trans_masuk) VALUES ('%d','%s','%d','%s','%s')";
                sqlQuery = String.format(sqlQuery, idUser, weight, total, desc, date);

                statement.execute(sqlQuery);
                statusSave = "suksesSave";
            } catch (Exception e) {
                statusSave = "gagalSave";
                e.printStackTrace();
            }
        }

        return statusSave;
    }

    private void initiateEditView() {
        try {
            Statement statement = DatabaseConnection.getDatabaseConnection().createStatement();
            String sqlStatement = "SELECT * FROM transaksi_masuk WHERE no_trans_masuk='%d'";
            sqlStatement = String.format(sqlStatement, noTransaksi);

            ResultSet res = statement.executeQuery(sqlStatement);

            if (res.next()) {
                idUser = res.getInt("id_user");
                total = res.getInt("total");
                String rawBerat = res.getString("berat");
                berat = formater.convertBeratToInteger(rawBerat);

                String desc = res.getString("deskripsi");
                date = res.getString("tanggal_trans_masuk");

                rDate = formater.convertStringToDate(date);
                btnDatePicker.setDate(rDate);

                String formatedTotal = formater.formatNumberToThousand(total);

                String onlyNumberBerat = formater.extractNumberFromString(rawBerat);
                edtBerat.setText(onlyNumberBerat);
                edtDeskripsiTransaksi.setText(desc);
                txTotal.setText(formatedTotal);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void getBaseHarga() {
        btnDatePicker.setDateFormatString("dd MMMM yyyy");

        try {
            String today = formater.getTodayDate();

            rDate = formater.convertStringToDate(today);
            btnDatePicker.setDate(rDate);
        } catch (Exception e) {
            e.printStackTrace();
        }

        if (noTransaksi > 0) {
            txTrans.setText("EDIT TRANSAKSI MASUK");
        } else {
            txTrans.setText("TAMBAH TRANSAKSI MASUK");
        }
        try {
            Statement statement = DatabaseConnection.getDatabaseConnection().createStatement();
            String sqlStatement = "SELECT * FROM base_harga";
            ResultSet res = statement.executeQuery(sqlStatement);

            while (res.next()) {
                harga = res.getInt("harga");
            }

        } catch (Exception e) {
            System.out.println("Terjadi kesalahan karena : " + e);
            e.printStackTrace();
        }

        txBaseHarga.setText("Rp." + harga);
        txBaseHarga.paintImmediately(txBaseHarga.getVisibleRect());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bharga;
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnConfirm;
    private com.toedter.calendar.JDateChooser btnDatePicker;
    private javax.swing.JLabel deskripsi;
    private javax.swing.JFormattedTextField edtBerat;
    private javax.swing.JTextField edtDeskripsiTransaksi;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel tgl;
    private javax.swing.JLabel tot;
    private javax.swing.JLabel txBaseHarga;
    private javax.swing.JLabel txTotal;
    private javax.swing.JLabel txTrans;
    // End of variables declaration//GEN-END:variables
}
